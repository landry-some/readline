# ================================================================================ #
#                     Reeflective Readline Configuration file                      #
# ================================================================================ #

# Notes ===========
# - This configuration file supports different notations for the keys:
#     * Caret notation (such as the default below)
#     * Hex notation (as the shell reads the keys, eg. "\e", or '\x01')
#     * Regular expressions, ONLY IF they are enclosed in square brackets or parenthesis.
#       Example: "[!-~]" is a range matching any non-empty, non-modified character.
#                "(\x1b[0-9])" matches all numbers entered with Alt modifier (eg. Alt+3)
#
# Cursors =========
# - Block
# - Beam
# - Underline
# - BlinkingBlock
# - BlinkingBeam
# - BlinkingUnderline
# - Default (the system cursor)

## Input Mode: the main edition mode to use
# - emacs
# - vim
inputMode: emacs 

#
## Vim global settings ##
#
vim:
    insertCursor: BlinkingBeam
    normalCursor: BlinkingBlock
    operatorPendingCursor: BlinkingUnderline
    visualCursor: BlinkingBlock
    replaceCursor: BlinkingUnderline
#
## Emacs global settings ##
#
emacs:
    cursor: BlinkingBeam

#
# Keymaps ##
#
# All key mappings for the shell are listed below.
# You can remove any subsection if wanted: for every missing
# subsection, the shell has already loaded the corresponding
# default key mappings.
keymaps:
    # Emacs key mappings
    emacs:
        "(\e[0-9])": digit-argument
        ^?: backward-delete-char
        ^@: set-mark-command
        ^[": quote-region
        ^[': quote-line
        ^[-: neg-argument
        ^[<: beginning-of-buffer-or-history
        ^[>: end-of-buffer-or-history
        ^[[1;3A: history-search
        ^[[1;3B: menu-select
        ^[[1;5C: forward-word
        ^[[1;5D: backward-word
        ^[[3;5~: kill-word
        ^[[3~: delete-char
        ^[[5~: history-search
        ^[[6~: menu-select
        ^[[200~: bracketed-paste
        ^[[A: up-line-or-search
        ^[[B: down-line-or-select
        ^[[C: forward-char
        ^[[D: backward-char
        ^[[Z: menu-select
        ^[^?: backward-kill-word
        ^[^[[A: history-search
        ^[^[[B: menu-select
        ^[^[OA: history-search
        ^[^[OB: menu-select
        ^[^_: copy-prev-word
        ^[^D: list-choices
        ^[^G: send-break
        ^[^H: backward-kill-word
        ^[^I: self-insert-unmeta
        ^[^J: self-insert-unmeta
        ^[^L: clear-screen
        ^[^M: self-insert-unmeta
        ^[|: vi-goto-column
        ^[B: backward-word
        ^[C: capitalize-word
        ^[D: kill-word
        ^[F: forward-word
        ^[L: down-case-word
        ^[N: history-search-forward
        ^[P: history-search-backward
        ^[Q: push-line
        ^[S: spell-word
        ^[T: transpose-words
        ^[U: up-case-word
        ^[W: copy-region-as-kill
        ^[a: accept-and-hold
        ^[b: backward-word
        ^[c: capitalize-word
        ^[d: kill-word
        ^[f: forward-word
        ^[l: ls^J
        ^[m: copy-prev-shell-word
        ^[n: history-search-forward
        ^[p: history-search-backward
        ^[t: transpose-words
        ^[u: up-case-word
        ^[w: kill-region
        ^_: undo
        ^A: beginning-of-line
        ^B: backward-char
        ^D: delete-char-or-list
        ^E: end-of-line
        ^F: forward-char
        ^G: send-break
        ^I: expand-or-complete
        ^K: kill-line
        ^L: clear-screen
        ^M: accept-line
        ^N: down-line-or-history
        ^O: accept-line-and-down-history
        ^P: up-line-or-history
        ^R: history-incremental-search-backward
        ^S: history-incremental-search-forward
        ^T: transpose-chars
        ^U: kill-whole-line
        ^W: backward-kill-word
        ^X^B: vi-match-bracket
        ^X^E: vi-edit-command-line
        ^X^K: kill-buffer
        ^X^N: infer-next-history
        ^X^O: overwrite-mode
        ^X^U: undo
        ^X^V: vi-cmd-mode
        ^X^X: exchange-point-and-mark
        ^Xr: history-incremental-search-backward
        ^Xs: history-incremental-search-forward
        ^Xu: undo
        ^Y: yank

    # Vim Normal mode key mappings
    vicmd:
        ' ': vi-forward-char
        '"': vi-set-buffer
        $: vi-end-of-line
        '%': vi-match-bracket
        '[1-9]': digit-argument
        ^?: backward-delete-char
        ^[[1;5C: forward-word
        ^[[1;5D: backward-word
        ^[[3;5~: kill-word
        ^[[3~: delete-char
        ^[[5~: up-line-or-history
        ^[[6~: down-line-or-history
        ^[[A: history-search
        ^[[B: menu-select
        ^[[C: vi-forward-char
        ^[[D: vi-backward-char
        ^[[F: end-of-line
        ^[[H: beginning-of-line
        ^A: switch-keyword
        ^L: clear-screen
        ^M: accept-line
        ^N: down-history
        ^P: up-history
        ^R: redo
        ^X: switch-keyword
        '|': vi-goto-column
        "~": vi-swap-case
        "0": vi-digit-or-beginning-of-line
        A: vi-add-eol
        B: vi-backward-blank-word
        C: vi-change-eol
        D: vi-kill-eol
        E: vi-forward-blank-word-end
        F: vi-find-prev-char
        I: vi-insert-bol
        P: vi-put-before
        R: vi-replace
        T: vi-find-prev-char-skip
        V: visual-line-mode
        W: vi-forward-blank-word
        X: vi-backward-delete-char
        Y: vi-yank-whole-line
        a: vi-add-next
        b: vi-backward-word
        c: vi-change
        d: vi-delete
        e: vi-forward-word-end
        f: vi-find-next-char
        g~: vi-oper-swap-case
        gE: vi-backward-blank-word-end
        ge: vi-backward-word-end
        h: vi-backward-char
        i: vi-insert-mode
        j: down-line-or-history
        k: up-line-or-history
        l: vi-forward-char
        p: vi-put-after
        r: vi-replace-chars
        s: vi-substitute
        t: vi-find-next-char-skip
        u: undo
        v: visual-mode
        w: vi-forward-word
        x: vi-delete-char
        y: vi-yank
    # Vim Insert mode key mappings
    viins:
        ^?: backward-delete-char
        ^[: vi-cmd-mode
        ^[[1;5C: forward-word
        ^[[1;5D: backward-word
        ^[[3;5~: kill-word
        ^[[3~: delete-char
        ^[[6~: menu-select
        ^[[C: vi-forward-char
        ^[[D: vi-backward-char
        ^[[F: end-of-line
        ^[[H: beginning-of-line
        ^[R: vi-registers-complete
        ^_: undo
        ^A: beginning-of-line
        ^B: backward-char
        ^E: end-of-line
        ^F: forward-char
        ^I: expand-or-complete
        ^K: kill-line
        ^L: clear-screen
        ^M: accept-line
        ^N: down-line-or-history
        ^O: accept-line-and-down-history
        ^P: up-line-or-history
        ^Q: accept-and-infer-next-history
        ^R: history-search-backward
        ^W: backward-kill-word
        ^Y: yank
    # Vim Insert mode key mappings
    viopp:
        ^[: vi-cmd-mode
        aW: select-a-blank-word
        aa: select-a-shell-word
        aw: select-a-word
        iW: select-in-blank-word
        ia: select-in-shell-word
        iw: select-in-word
        j: down-line
        k: up-line
    # Vim Visual mode key mappings
    visual:
        ^[: vi-cmd-mode
        "~": vi-swap-case
        S: vi-add-surround
        a: vi-select-surround
        aW: select-a-blank-word
        aa: select-a-shell-word
        aw: select-a-word
        c: vi-change
        d: vi-delete
        i: vi-select-surround
        iW: select-in-blank-word
        ia: select-in-shell-word
        iw: select-in-word
        j: down-line
        k: up-line
        s: vi-substitute
        u: vi-down-case
        v: vi-edit-command-line
        x: vi-delete
        "y": vi-yank

    # Completion key mappings
    menuselect:
        ^@: accept-and-menu-complete
        ^[[1;5A: menu-complete-prev-tag
        ^[[1;5B: menu-complete-next-tag
        ^[[A: reverse-menu-complete
        ^[[B: menu-complete
        ^[[C: menu-complete
        ^[[D: reverse-menu-complete
        ^[[Z: reverse-menu-complete
        ^F: menu-incremental-search
        ^I: menu-complete

#
# Other helpers settings ##
#
# historyAutosuggest: If true, the shell will display fish-like
# autosuggestions (the first matching history line is displayed dimmed).
historyAutosuggest: false
# historyAutoWrite: defines whether items automatically get written to history.
# Enabled by default. Set to false to disable.
historyAutoWrite: true

# The maximum number of completion rows to print at any time.
maxTabCompleterRows: 50 
# Autocomplete asynchrously generates completions as text is typed in the line.
autoComplete: true
